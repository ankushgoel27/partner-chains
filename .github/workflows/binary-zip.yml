name: Build and Upload Artifacts

on:
  workflow_dispatch:
    inputs:
      partner_chains_smart_contracts_sha:
        description: "partner-chains-smart-contracts commit SHA"
        default: "38f4c17e0f4052d885c9d438f7fb8ad0b2e7b25e"
      partner_chains_sha:
        description: "partner-chains commit SHA"
        default: "master"

jobs:
  partner-chains-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Build partner-chains-node
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build -p partner-chains-node --locked --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/partner-chains-node partner-chains-node-x86_64-linux
          chmod +x partner-chains-node-x86_64-linux

      - name: Build partner-chains-cli
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build -p partner-chains-cli --locked --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/partner-chains-cli partner-chains-cli-x86_64-linux
          chmod +x partner-chains-cli-x86_64-linux

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries-x86_64-linux
          path: |
            partner-chains-node-x86_64-linux
            partner-chains-cli-x86_64-linux

  partner-chains-macos-x86_64:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install protoc
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.3/protoc-21.3-osx-x86_64.zip
          unzip protoc-21.3-osx-x86_64.zip -d $HOME/protoc
          sudo mv $HOME/protoc/bin/protoc /usr/local/bin/protoc

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Build partner-chains-node
        run: |
          rustup target add x86_64-apple-darwin
          cargo build -p partner-chains-node --locked --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/partner-chains-node partner-chains-node-x86_64-apple-darwin
          chmod +x partner-chains-node-x86_64-apple-darwin

      - name: Build partner-chains-cli
        run: |
          rustup target add x86_64-apple-darwin
          cargo build -p partner-chains-cli --locked --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/partner-chains-cli partner-chains-cli-x86_64-apple-darwin
          chmod +x partner-chains-cli-x86_64-apple-darwin

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries-x86_64-apple-darwin
          path: |
            partner-chains-node-x86_64-apple-darwin
            partner-chains-cli-x86_64-apple-darwin

  partner-chains-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install protoc
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.3/protoc-21.3-osx-aarch_64.zip
          unzip protoc-21.3-osx-aarch_64.zip -d $HOME/protoc
          sudo mv $HOME/protoc/bin/protoc /usr/local/bin/protoc

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Build partner-chains-node
        run: |
          rustup target add aarch64-apple-darwin
          cargo build -p partner-chains-node --locked --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/partner-chains-node partner-chains-node-aarch64-apple-darwin
          chmod +x partner-chains-node-aarch64-apple-darwin

      - name: Build partner-chains-cli
        run: |
          rustup target add aarch64-apple-darwin
          cargo build -p partner-chains-cli --locked --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/partner-chains-cli partner-chains-cli-aarch64-apple-darwin
          chmod +x partner-chains-cli-aarch64-apple-darwin

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries-aarch64-apple-darwin
          path: |
            partner-chains-node-aarch64-apple-darwin
            partner-chains-cli-aarch64-apple-darwin

  partner-chains-smart-contracts:
    runs-on: [self-hosted, nixos]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: input-output-hk/partner-chains-smart-contracts
          token: ${{ secrets.ACTIONS_PAT }}
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}
          path: partner-chains-smart-contracts

      - name: Build
        run: nix build ./partner-chains-smart-contracts#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts
          path: result/release.zip

