name: Nix Devshells Tests

on:
  workflow_call:
    secrets:
      AWS_ROLE_ARN:
        required: true
      NIX_SIGNING_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_SESSION_TOKEN:
        required: false

jobs:
  build-and-test:
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        os: [nixos, macos]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update flake.lock with calling PR
        if: ${{ github.event_name == 'repository_dispatch' }}
        run: |
          nix flake lock --update-input trustless-sidechain \
          --override-input trustless-sidechain \
          github:input-output-hk/partner-chains-smart-contracts/${{ github.event.client_payload.ref }}

      - name: Acquire AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Add signing key for nix
        run: echo "${{ secrets.NIX_SIGNING_KEY }}" > "${{ runner.temp }}/nix-key"

      - name: Run nixci to build/test all outputs
        run: |
          nix run github:srid/nixci -- -v build -- --fallback > /tmp/outputs

      - name: Copy nix scopes to nix cache
        run: |
          nix-store --stdin -q --deriver < /tmp/outputs | nix-store --stdin -qR --include-outputs \
          | nix copy --stdin --to \
          "s3://cache.sc.iog.io?secret-key=${{ runner.temp }}/nix-key&region=$AWS_DEFAULT_REGION" \
          && rm /tmp/outputs
