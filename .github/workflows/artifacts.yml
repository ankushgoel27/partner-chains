name: Build and Upload Artifacts

on:
  workflow_dispatch:
    inputs:
      partner_chains_smart_contracts_sha:
        description: "partner-chains-smart-contracts commit SHA or branch to build from"
      partner-chains-smart-contracts-tag:
        description: "partner-chains-smart-contract release tag to append to artifact name (optional)"
        required: false
      partner_chains_sha:
        description: "partner-chains commit SHA or branch to build from"
      partner-chains-tag:
        description: "partner-chains release tag to append to artifact name (optional)"
        required: false

jobs:
  partner-chains-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          if [ -n "${{ github.event.inputs.partner-chains-tag }}" ]; then
            echo "PARTNER_CHAINS_CLI_X86_64_LINUX=partner-chains-cli-${{ github.event.inputs.partner-chains-tag }}-x86_64-linux" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_X86_64_LINUX=partner-chains-node-${{ github.event.inputs.partner-chains-tag }}-x86_64-linux" >> $GITHUB_ENV
          else
            echo "PARTNER_CHAINS_CLI_X86_64_LINUX=partner-chains-cli-x86_64-linux" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_X86_64_LINUX=partner-chains-node-x86_64-linux" >> $GITHUB_ENV
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Build partner-chains-node
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build -p partner-chains-node --locked --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/partner-chains-node $PARTNER_CHAINS_NODE_X86_64_LINUX
          chmod +x $PARTNER_CHAINS_NODE_X86_64_LINUX

      - name: Build partner-chains-cli
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build -p partner-chains-cli --locked --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/partner-chains-cli $PARTNER_CHAINS_CLI_X86_64_LINUX
          chmod +x $PARTNER_CHAINS_CLI_X86_64_LINUX

      - name: Upload partner-chains-cli-x86_64-linux
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_CLI_X86_64_LINUX }}
          path: ${{ env.PARTNER_CHAINS_CLI_X86_64_LINUX }}

      - name: Upload partner-chains-node-x86_64-linux
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_NODE_X86_64_LINUX }}
          path: ${{ env.PARTNER_CHAINS_NODE_X86_64_LINUX }}

  partner-chains-macos-x86_64:
    runs-on: macos-latest
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          if [ -n "${{ github.event.inputs.partner-chains-tag }}" ]; then
            echo "PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN=partner-chains-cli-${{ github.event.inputs.partner-chains-tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN=partner-chains-node-${{ github.event.inputs.partner-chains-tag }}-x86_64-apple-darwin" >> $GITHUB_ENV
          else
            echo "PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN=partner-chains-cli-x86_64-apple-darwin" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN=partner-chains-node-x86_64-apple-darwin" >> $GITHUB_ENV
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install protoc
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.3/protoc-21.3-osx-x86_64.zip
          unzip protoc-21.3-osx-x86_64.zip -d $HOME/protoc
          sudo mv $HOME/protoc/bin/protoc /usr/local/bin/protoc

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Build partner-chains-node
        run: |
          rustup target add x86_64-apple-darwin
          cargo build -p partner-chains-node --locked --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/partner-chains-node $PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN
          chmod +x $PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN

      - name: Build partner-chains-cli
        run: |
          rustup target add x86_64-apple-darwin
          cargo build -p partner-chains-cli --locked --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/partner-chains-cli $PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN
          chmod +x $PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN

      - name: Upload partner-chains-cli-x86_64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN }}
          path: ${{ env.PARTNER_CHAINS_CLI_X86_64_APPLE_DARWIN }}

      - name: Upload partner-chains-node-x86_64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN }}
          path: ${{ env.PARTNER_CHAINS_NODE_X86_64_APPLE_DARWIN }}

  partner-chains-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          if [ -n "${{ github.event.inputs.partner-chains-tag }}" ]; then
            echo "PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN=partner-chains-cli-${{ github.event.inputs.partner-chains-tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN=partner-chains-node-${{ github.event.inputs.partner-chains-tag }}-aarch64-apple-darwin" >> $GITHUB_ENV
          else
            echo "PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN=partner-chains-cli-aarch64-apple-darwin" >> $GITHUB_ENV
            echo "PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN=partner-chains-node-aarch64-apple-darwin" >> $GITHUB_ENV
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.partner_chains_sha }}

      - name: Install protoc
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.3/protoc-21.3-osx-aarch_64.zip
          unzip protoc-21.3-osx-aarch_64.zip -d $HOME/protoc
          sudo mv $HOME/protoc/bin/protoc /usr/local/bin/protoc

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Build partner-chains-node
        run: |
          rustup target add aarch64-apple-darwin
          cargo build -p partner-chains-node --locked --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/partner-chains-node $PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN
          chmod +x $PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN

      - name: Build partner-chains-cli
        run: |
          rustup target add aarch64-apple-darwin
          cargo build -p partner-chains-cli --locked --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/partner-chains-cli $PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN
          chmod +x $PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN

      - name: Upload partner-chains-cli-aarch64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN }}
          path: ${{ env.PARTNER_CHAINS_CLI_AARCH64_APPLE_DARWIN }}
            
      - name: Upload partner-chains-node-aarch64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN }}
          path: ${{ env.PARTNER_CHAINS_NODE_AARCH64_APPLE_DARWIN }}

  partner-chains-smart-contracts-build:
    runs-on: [self-hosted, nixos]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: input-output-hk/partner-chains-smart-contracts
          token: ${{ secrets.ACTIONS_PAT }}
          ref: ${{ github.event.inputs.partner_chains_smart_contracts_sha }}
          path: partner-chains-smart-contracts

      - name: Build
        run: nix build ./partner-chains-smart-contracts#sidechain-release-bundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-chains-smart-contracts
          path: result/release.zip

  partner-chains-smart-contracts-process:
    runs-on: ubuntu-latest
    needs: partner-chains-smart-contracts-build
    steps:
      - name: Set filename variables
        id: set-filenames
        run: |
          if [ -n "${{ github.event.inputs.partner-chains-smart-contracts-tag }}" ]; then
            echo "SIDECHAIN_MAIN_CLI=sidechain-main-cli-${{ github.event.inputs.partner-chains-smart-contracts-tag }}" >> $GITHUB_ENV
          else
            echo "SIDECHAIN_MAIN_CLI=sidechain-main-cli" >> $GITHUB_ENV
          fi
          
      - name: Download release.zip
        uses: actions/download-artifact@v4
        with:
          name: partner-chains-smart-contracts
          path: ./artifact

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: partner-chains-smart-contracts
  
      - name: Unzip release.zip
        run: |
          mkdir -p artifact/unzipped
          unzip artifact/release.zip -d artifact/unzipped
          
      - name: Rename sidechain-cli to sidechain-main-cli
        run: |
          mv artifact/unzipped/sidechain-cli artifact/unzipped/sidechain-main-cli
  
      - name: Upload Renamed Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SIDECHAIN_MAIN_CLI }}
          path: artifact/unzipped/
